import ejiayou.composing.builds.AndroidX
import ejiayou.composing.builds.Testing
import ejiayou.composing.builds.Google
import ejiayou.composing.builds.ThirdLib

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id 'ejiayou.composing.builds'
    id 'kotlin-android-extensions'
//    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    compileSdk 30

    defaultConfig {
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        //java 配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        //kotlin 配置
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions { exclude 'META-INF/rxjava.properties' }
    //设置了resourcePrefix值后，所有的资源名必须以指定的字符串做前缀，否则会报错。
    //但是resourcePrefix这个值只能限定xml里面的资源，并不能限定图片资源，所有图片资源仍然需要手动去修改资源名。
    resourcePrefix "station_"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    buildFeatures {
        dataBinding true
    }
}
dependencies {
    testImplementation Testing.jUnit
    androidTestImplementation Testing.androidJunit
    androidTestImplementation Testing.espresso
    //每个module必须引用 ARouter
    api ThirdLib.Arouter.arouterApi
    annotationProcessor ThirdLib.Arouter.arouterCompiler
    kapt ThirdLib.Arouter.arouterCompiler
    api 'com.github.nearbyren:ensd-common:1.2.3'
    api 'com.ogaclejapan.smarttablayout:library:2.0.0@aar'
    api 'com.ogaclejapan.smarttablayout:utils-v4:2.0.0@aar'
    implementation project(path: ':station-export')


}

afterEvaluate {
    publishing {
        publications {

            // Creates a Maven publication called "release".
            release(MavenPublication) {

                // Applies the component for the release build variant.
                from components.release

                // Library Package Name (Example : "com.frogobox.androidfirstlib")
                // NOTE : Different GroupId For Each Library / Module, So That Each Library Is Not Overwritten
                groupId = 'ejiayou.station.module'

                // Library Name / Module Name (Example : "androidfirstlib")
                // NOTE : Different ArtifactId For Each Library / Module, So That Each Library Is Not Overwritten
                artifactId = 'module'

                // Version Library Name (Example : "1.0.0")
                version = '1.0.0'

            }
        }
    }
}